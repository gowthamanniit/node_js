step 1: open vs code
        open folder(create new folder-paymentgatewaydemo)
        
        open terminal :
          install the following ..
          
          npm i body-parser ejs express nodemon stripe
step 2:
  
           add server.js file inside your folder (paymentgatewaydemo)
           
           ---------------------server.js--------------------------------
           
           const express = require('express')
           const bodyParser = require('body-parser')
const path = require('path')
const stripe = require('stripe')('sk_test_5c4YKcccumcCoq57wBDG7hsF00oTC68EzA') // change the secret key

const app = express()
app.use(bodyParser.urlencoded({ extended: true }))

app.set('view engine', 'ejs');
app.engine('html', require('ejs').renderFile);

app.use(express.static(path.join(__dirname, './views')));

app.get('/', (req,res) => {
	res.render('index.html');
})

app.post('/charge', (req, res) => {
    try {
        stripe.customers.create({
            name: req.body.name,
            email: req.body.email,
            source: req.body.stripeToken
        }).then(customer => stripe.charges.create({
            amount: req.body.amount * 100,
            currency: 'usd',
            customer: customer.id,
            description: 'Thank you for your generous donation.'
        })).then(() => res.render('complete.html'))
            .catch(err => console.log(err))
    } catch (err) { res.send(err) }
})


const port = process.env.PORT || 3000
app.listen(port, () => console.log('Server is running...'))
           
           
          -------------------------------------------------------
  step 3: create views folder inside your folder(payment gateway demo)
  	-----------------------------card.js----------------------
	const stripe = Stripe('pk_test_2qnJaovQJlNI6dmass2c4dQR00CkfY9VGC');
const elements = stripe.elements();

var style = {
    base: {
        color: "#fff"
    }
}
const card = elements.create('card', { style });
card.mount('#card-element');

const form = document.querySelector('form');
const errorEl = document.querySelector('#card-errors');

const stripeTokenHandler = token => {
    const hiddenInput = document.createElement('input');
    hiddenInput.setAttribute('type', 'hidden');
    hiddenInput.setAttribute('name', 'stripeToken');
    hiddenInput.setAttribute('value', token.id);
    form.appendChild(hiddenInput);

    console.log(form)
    form.submit();
}

form.addEventListener('submit', e => {
    e.preventDefault();

    stripe.createToken(card).then(res => {
        if (res.error) errorEl.textContent = res.error.message;
        else {
            console.log(res.token)
            stripeTokenHandler(res.token);
        }
    })
})
  
          -----------------views folder ------------complete.html------------------css-------------
	  <!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <link href="https://unpkg.com/tailwindcss@^1.0/dist/tailwind.min.css" rel="stylesheet">
    <title> Completed</title>
</head>

<body class="bg-gray-900">
    <nav class="bg-purple-900 h-20 flex justify-center">
        <h1 class="text-white text-5xl">Stripe Node App</h1>
    </nav>
    <div class="flex flex-col items-center mt-32 text-white text-2xl">
        <p>Thank you for your generous donation.</p>
        <p>Your payment has been received.</p>
        <a href="/"><button class="bg-blue-700 rounded p-4 mt-3">Return</button></a>
    </div>
</body>

</html>
    
